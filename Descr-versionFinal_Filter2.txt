# Filtrage de Tchebychev

ce tp implémente un filtrage passe-bas de Tchebychev sur un signal audio combiné (voix + bruit). 
Il enregistre un signal vocal, y ajoute un bruit synthétique, puis applique un filtre pour réduire les hautes fréquences indésirables.

## filter details 

- **Type de filtre** : Filtre passe-bas de Tchebychev de type I
- **Ordre** : 4
- **Fréquence de coupure** : 3000 Hz
- **Ondulation en bande passante** : 0.5 dB

## Implémentation

Le filtre est défini à l'aide de la fonction `cheby1` de `scipy.signal` :

```python
import scipy.signal as signal

fs = 44100  # Fréquence d'échantillonnage
cutoff_frequency = 3000  # Fréquence de coupure
nyquist = 0.5 * fs
normal_cutoff = cutoff_frequency / nyquist

b, a = signal.cheby1(4, 0.5, normal_cutoff, btype='low', analog=False)
filtered_audio = signal.filtfilt(b, a, combined_audio)
```

##  resuult

Le signal filtré est sauvegardé dans `voix_et_bruit_filtre.wav`. Des graphiques sont générés pour analyser :
- Le signal temporel avant et après filtrage
- La densité spectrale avant et après filtrage

##  Fichiers générés
- `enregistrement.wav` : Signal vocal enregistré
- `bruit_genere.wav` : Bruit synthétique généré
- `voix_et_bruit_combine.wav` : Signal bruité
- `voix_et_bruit_filtre.wav` : Signal filtré
- Graphiques de signaux et densité spectrale (format `.png`)



-

